{"version":3,"file":"usuarioApiService-fd1c9a77.js","sources":["../../src/data/services/usuarioApiService.js"],"sourcesContent":["import { apiClient } from '../api/apiClient.js';\r\nimport { Usuario } from '../types/index.js';\r\n\r\nclass UsuarioApiService {\r\n  constructor() {\r\n    this.baseUrl = '/api/users';\r\n  }\r\n\r\n  // Obtener todos los usuarios\r\n  async getAllUsuarios() {\r\n    try {\r\n      const response = await apiClient.get(this.baseUrl);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al obtener usuarios:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Error al obtener la lista de usuarios'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Obtener usuario por ID\r\n  async getUsuarioById(id) {\r\n    try {\r\n      const response = await apiClient.get(`${this.baseUrl}/${id}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al obtener usuario:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Error al obtener el usuario'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Obtener usuario por email/username\r\n  async getUsuarioByEmail(email) {\r\n    try {\r\n      const response = await apiClient.get(`${this.baseUrl}/email/${email}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al obtener usuario por email:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Error al obtener el usuario'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Crear usuario\r\n  async createUsuario(usuario) {\r\n    try {\r\n      const response = await apiClient.post(this.baseUrl, usuario);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al crear usuario:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Error al crear el usuario'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Actualizar usuario\r\n  async updateUsuario(id, usuario) {\r\n    try {\r\n      const response = await apiClient.put(`${this.baseUrl}/${id}`, usuario);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al actualizar usuario:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Error al actualizar el usuario'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Eliminar usuario\r\n  async deleteUsuario(username) {\r\n    try {\r\n      const response = await apiClient.delete(`${this.baseUrl}/${username}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error al eliminar usuario:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Error al eliminar el usuario'\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const usuarioApiService = new UsuarioApiService();\r\nexport default usuarioApiService;\r\n"],"names":["UsuarioApiService","apiClient","error","id","email","usuario","username","usuarioApiService"],"mappings":"2HAGA,MAAMA,CAAkB,CACtB,aAAc,CACZ,KAAK,QAAU,YAChB,CAGD,MAAM,gBAAiB,CACrB,GAAI,CAEF,OADiB,MAAMC,EAAU,IAAI,KAAK,OAAO,CAElD,OAAQC,EAAO,CACd,eAAQ,MAAM,6BAA8BA,CAAK,EAC1C,CACL,QAAS,GACT,MAAO,uCACf,CACK,CACF,CAGD,MAAM,eAAeC,EAAI,CACvB,GAAI,CAEF,OADiB,MAAMF,EAAU,IAAI,GAAG,KAAK,OAAO,IAAIE,CAAE,EAAE,CAE7D,OAAQD,EAAO,CACd,eAAQ,MAAM,4BAA6BA,CAAK,EACzC,CACL,QAAS,GACT,MAAO,6BACf,CACK,CACF,CAGD,MAAM,kBAAkBE,EAAO,CAC7B,GAAI,CAEF,OADiB,MAAMH,EAAU,IAAI,GAAG,KAAK,OAAO,UAAUG,CAAK,EAAE,CAEtE,OAAQF,EAAO,CACd,eAAQ,MAAM,sCAAuCA,CAAK,EACnD,CACL,QAAS,GACT,MAAO,6BACf,CACK,CACF,CAGD,MAAM,cAAcG,EAAS,CAC3B,GAAI,CAEF,OADiB,MAAMJ,EAAU,KAAK,KAAK,QAASI,CAAO,CAE5D,OAAQH,EAAO,CACd,eAAQ,MAAM,0BAA2BA,CAAK,EACvC,CACL,QAAS,GACT,MAAO,2BACf,CACK,CACF,CAGD,MAAM,cAAcC,EAAIE,EAAS,CAC/B,GAAI,CAEF,OADiB,MAAMJ,EAAU,IAAI,GAAG,KAAK,OAAO,IAAIE,CAAE,GAAIE,CAAO,CAEtE,OAAQH,EAAO,CACd,eAAQ,MAAM,+BAAgCA,CAAK,EAC5C,CACL,QAAS,GACT,MAAO,gCACf,CACK,CACF,CAGD,MAAM,cAAcI,EAAU,CAC5B,GAAI,CAEF,OADiB,MAAML,EAAU,OAAO,GAAG,KAAK,OAAO,IAAIK,CAAQ,EAAE,CAEtE,OAAQJ,EAAO,CACd,eAAQ,MAAM,6BAA8BA,CAAK,EAC1C,CACL,QAAS,GACT,MAAO,8BACf,CACK,CACF,CACH,CAEY,MAACK,EAAoB,IAAIP"}